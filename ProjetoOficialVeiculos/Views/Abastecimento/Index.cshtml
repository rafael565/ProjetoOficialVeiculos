@model IEnumerable<ProjetoOficialVeiculos.Models.Agendamento>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@functions {
    public string GetBadgeClass(ControleOficialVeiculos.Enum.StatusAgendamento? status)
    {
        if (status == null) return "bg-secondary";

        return status switch
        {
            ControleOficialVeiculos.Enum.StatusAgendamento.Concluido => "bg-success",
            ControleOficialVeiculos.Enum.StatusAgendamento.Cancelado => "bg-danger",
            ControleOficialVeiculos.Enum.StatusAgendamento.Carregamento => "bg-warning text-dark",
            ControleOficialVeiculos.Enum.StatusAgendamento.Faturamento => "bg-info text-dark",
            _ => "bg-secondary"
        };
    }

    public int GetProgressStep(ControleOficialVeiculos.Enum.StatusAgendamento? status)
    {
        if (status == null) return 1;

        return status switch
        {
            ControleOficialVeiculos.Enum.StatusAgendamento.Pendente => 1,
            ControleOficialVeiculos.Enum.StatusAgendamento.Carregamento => 2,
            ControleOficialVeiculos.Enum.StatusAgendamento.Concluido => 3,
            ControleOficialVeiculos.Enum.StatusAgendamento.Faturamento => 4,
            _ => 1
        };
    }

    // Método corrigido para lidar com string
    public bool HasPesoCarregado(string pesoCarregado)
    {
        if (string.IsNullOrEmpty(pesoCarregado))
            return false;

        // Tenta converter para decimal para verificar se é um número válido e maior que zero
        if (decimal.TryParse(pesoCarregado, out decimal peso))
        {
            return peso > 0;
        }

        return false;
    }

    // Método para obter texto seguro de objetos nulos
    public string GetSafeText(object obj)
    {
        return obj?.ToString() ?? "N/A";
    }

    // Método para obter data formatada segura
    public string GetSafeDate(DateTime? date)
    {
        return date?.ToString("dd/MM/yyyy HH:mm") ?? "N/A";
    }
}

<div class="mb-3">
    <a asp-controller="Home" asp-action="Index"
       class="btn btn-outline-secondary px-4 py-2 shadow-sm rounded-pill transition"
       style="display: inline-flex; align-items: center; gap: 8px;">
        <i class="fas fa-arrow-left"></i>
        <span>Voltar para Início</span>
    </a>
</div>

<div class="container mt-4">
    <div class="card shadow-lg p-4">
        <h2 class="text-center text-dark mb-4">📅 Lista de Abastecimento</h2>
        <hr />

        <!-- Filtro de Pesquisa -->
        <form method="get" class="mb-4">
            <div class="row g-3 align-items-end">
                <div class="col-md-4">
                    <label for="dataAgendamento" class="form-label">Data Agendamento</label>
                    <input type="date" id="dataAgendamento" name="dataAgendamento" class="form-control form-control-sm"
                           value="@Context.Request.Query["dataAgendamento"]" />
                </div>

                <div class="col-md-4">
                    <label for="dataConclusao" class="form-label">Data Carregamento</label>
                    <input type="date" id="dataConclusao" name="dataConclusao" class="form-control form-control-sm"
                           value="@Context.Request.Query["dataConclusao"]" />
                </div>

                <div class="col-md-4">
                    <label for="caminhaoID" class="form-label">Caminhão (placa)</label>
                    <input type="text" id="caminhaoID" name="caminhaoID" class="form-control form-control-sm"
                           value="@Context.Request.Query["caminhaoID"]" placeholder="Digite a placa do caminhão" />
                </div>
                <div class="col-auto">
                    <div class="form-group">
                        <label for="status" class="form-label mb-1">Status:</label>
                        <select name="status" class="form-control form-control-sm">
                            <option value="">Todos</option>
                            <option value="Pendente">Aguardando Liberação</option>
                            <option value="Concluido">Concluído</option>
                            <option value="Cancelado">Cancelado</option>
                            <option value="Carregamento">Em Carregamento</option>
                        </select>
                    </div>
                </div>

                <div class="col-md-2">
                    <button type="submit" class="btn btn-sm btn-primary w-100">
                        <i class="bi bi-search"></i> Filtrar
                    </button>
                </div>
            </div>
        </form>

        <!-- Botões de navegação -->
        <div class="mb-4">
            <a asp-controller="Agendamentos" asp-action="List" class="btn btn-success me-2">
                <i class="bi bi-calendar-check"></i> Lista Agendamentos
            </a>
            <a asp-controller="Abastecimento" asp-action="listAbastecimento" class="btn btn-success">
                <i class="bi bi-calendar-check"></i> Lista Carregamento
            </a>
        </div>

        <hr />

        <!-- Lista de Agendamentos com Barra de Progresso -->
        <div class="row">
            @if (Model != null && Model.Any())
            {
                @foreach (var item in Model)
                {
                    <div class="col-md-6 col-lg-4 mb-4">
                        <div class="card h-100 shadow-sm border-0">
                            <div class="card-header bg-transparent border-0 pt-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    <h6 class="card-title mb-0 text-dark fw-bold">@GetSafeText(item.caminhao?.placa)</h6>
                                    <span class="badge @GetBadgeClass(item?.Status)">
                                        @if (item?.Status != null)
                                        {
                                            @Html.DisplayFor(modelItem => item.Status)
                                        }
                                        else
                                        {
                                            <text>N/A</text>
                                        }
                                    </span>
                                </div>
                            </div>

                            <div class="card-body">
                                <!-- Barra de Progresso Moderna -->
                                <div class="progress-container mb-3">
                                    <div class="progress-bar-modern">
                                        @{
                                            var progressStep = GetProgressStep(item?.Status);
                                            var progressPercentage = progressStep switch
                                            {
                                                1 => 0,
                                                2 => 50,
                                                3 => 100,
                                                _ => 0
                                            };
                                        }
                                        <div class="progress-track">
                                            <div class="progress-fill" style="width: @progressPercentage%"></div>
                                        </div>
                                        <div class="progress-steps">
                                            <div class="progress-step @(progressStep >= 1 ? "active" : "")">
                                                <div class="step-icon">⏳</div>
                                                <span class="step-label">Aguardando</span>
                                            </div>
                                            <div class="progress-step @(progressStep >= 2 ? "active" : "")">
                                                <div class="step-icon">🚛</div>
                                                <span class="step-label">Carregando</span>
                                            </div>
                                            <div class="progress-step @(progressStep >= 3 ? "active" : "")">
                                                <div class="step-icon">✅</div>
                                                <span class="step-label">Concluído</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Informações do Agendamento -->
                                <div class="agendamento-info">
                                    <div class="info-item">
                                        <small class="text-muted">Empresa:</small>
                                        <div class="fw-semibold">@GetSafeText(item.empresa?.nome)</div>
                                    </div>
                                    <div class="info-item">
                                        <small class="text-muted">Material:</small>
                                        <div class="fw-semibold">@GetSafeText(item.material?.nome)</div>
                                    </div>
                                    <div class="info-item">
                                        <small class="text-muted">Motorista:</small>
                                        <div class="fw-semibold">@GetSafeText(item.motorista?.nome)</div>
                                    </div>
                                    <div class="info-item">
                                        <small class="text-muted">Data:</small>
                                        <div class="fw-semibold">@GetSafeDate(item?.DataAgendamento)</div>
                                    </div>
                                    @if (HasPesoCarregado(item?.PesoCarregado))
                                    {
                                        <div class="info-item">
                                            <small class="text-muted">Peso:</small>
                                            <div class="fw-semibold text-success">@item.PesoCarregado kg</div>
                                        </div>
                                    }
                                </div>
                            </div>

                            <div class="card-footer bg-transparent border-0 pb-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    @if (item?.id != null)
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.id" class="btn btn-primary btn-sm">
                                            <i class="bi bi-gear"></i> Carregar
                                        </a>
                                    }
                                    else
                                    {
                                        <button class="btn btn-primary btn-sm" disabled>
                                            <i class="bi bi-gear"></i> Carregar
                                        </button>
                                    }

                                    <!-- Botão Chamar -->
                                    <div class="tempo-restante"
                                         data-conclusao="@(item?.DataConclusao.ToString("o") ?? "")"
                                         data-id="@(item?.id ?? 0)">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-12">
                    <div class="alert alert-info text-center">
                        <i class="bi bi-info-circle"></i> Nenhum agendamento encontrado.
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Estilos CSS para a Barra de Progresso Moderna -->
<style>
    .progress-container {
        padding: 0 10px;
    }

    .progress-bar-modern {
        position: relative;
    }

    .progress-track {
        height: 6px;
        background: #e9ecef;
        border-radius: 10px;
        overflow: hidden;
        margin: 20px 0 40px 0;
    }

    .progress-fill {
        height: 100%;
        background: linear-gradient(90deg, #007bff, #0056b3);
        border-radius: 10px;
        transition: width 0.5s ease;
        box-shadow: 0 2px 4px rgba(0,123,255,0.3);
    }

    .progress-steps {
        display: flex;
        justify-content: space-between;
        position: relative;
        margin-top: -45px;
    }

    .progress-step {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
        z-index: 2;
        flex: 1;
    }

    .step-icon {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2em;
        background: #e9ecef;
        border: 3px solid #fff;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        margin-bottom: 8px;
    }

    .progress-step.active .step-icon {
        background: #007bff;
        color: white;
        transform: scale(1.1);
        box-shadow: 0 4px 12px rgba(0,123,255,0.3);
    }

    .step-label {
        font-size: 0.75rem;
        font-weight: 600;
        color: #6c757d;
        text-align: center;
        transition: color 0.3s ease;
    }

    .progress-step.active .step-label {
        color: #007bff;
    }

    .agendamento-info {
        background: #f8f9fa;
        border-radius: 10px;
        padding: 15px;
        margin-top: 10px;
    }

    .info-item {
        margin-bottom: 8px;
    }

        .info-item:last-child {
            margin-bottom: 0;
        }

    .card {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        border: 1px solid #e3e6f0;
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1) !important;
        }

    /* Cores específicas para cada etapa */
    .progress-step:nth-child(1).active .step-icon {
        background: #6c757d !important;
    }

    .progress-step:nth-child(2).active .step-icon {
        background: #ffc107 !important;
        color: #000 !important;
    }

    .progress-step:nth-child(3).active .step-icon {
        background: #198754 !important;
        color: #fff !important;
    }

    /* Responsividade */
    @@media (max-width: 768px) {
        .progress-steps {
            margin-top: -40px;
        }

        .step-icon {
            width: 35px;
            height: 35px;
            font-size: 1em;
        }

        .step-label {
            font-size: 0.7rem;
        }
    }
</style>

<!-- Script para atualizar o tempo restante e botão "Chamar" -->
<script>
    function atualizarTemposRestantes() {
        const elementos = document.querySelectorAll('.tempo-restante');
        elementos.forEach(el => {
            const agendamentoStr = el.getAttribute('data-conclusao');
            const id = el.getAttribute('data-id');

            if (!agendamentoStr || id === "0") return;

            const agendamento = new Date(agendamentoStr);
            const agora = new Date();
            const diff = agendamento - agora;

            if (diff > 0) {
                const horas = Math.floor(diff / (1000 * 60 * 60));
                const minutos = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
                el.innerHTML = `<span class="badge bg-success">${horas}h ${minutos}min</span>`;
            } else {
                el.innerHTML = `
                    <form method="get" action="/Abastecimento/ChamarParaBalanca" target="_blank">
                        <input type="hidden" name="id" value="${id}" />
                        <button class="btn btn-warning btn-sm"
                                style="display: flex; align-items: center; gap: 4px; padding: 4px 8px;">
                            <span>📣</span>
                            <small>Chamar</small>
                        </button>
                    </form>
                `;
            }
        });
    }

    setInterval(atualizarTemposRestantes, 1000);
    window.addEventListener('DOMContentLoaded', atualizarTemposRestantes);
</script>